66일차

정적타입에 대한 요청도 dispatcherServlet에서 받는다.

main - resources 는 자바랑 연동된다 => java object (xml) log4j, mybatis -> 자바 객체를 만들어주는 곳

webapp - resources -> 자바를 거치지 않고 브라우저에서 바로 띄울 수 있는 것을 넣어준다

-> css, js, png, jpg, txt

다수의 파라미터를 묶어서 받을 때 DTO가 없다면 HashMap으로 처리가능

두개이상의 파라미터를 받아야 하지만 정해진 DTO는 없고 처리를 해야할 떄 HashMap을 사용해서 파라미터를 한번에 받을 수 있다
order 같이 다른 값이 들어와도 map에 추가시켜서 보낼 수 있다
HashMap을 이용하여 parameter를 받을 떄는 어노테이션 @RequestParam을 생략하면 안된다

--> @RequestParam 은 보통 생략하지만, HashMap 처리시에는 생략하지 않는다

mybatis의 함수는 매개변수를 최대 1개만 받는다

dto.getName() == map.get("name") 거의 비슷하게 처리하기 때문에 사용할 수 있는 것이다

${} 는 컬럼 이름을 지정하거나, 문법적인 요소를 작성할 때
#{} 는 값을 작성할 때 (자료형에 따라 처리가 달라질 때)

|| 는 오라클 DB 문법에서 문자열 더하기를 의미한다 


const today = new Date().toUTCString().replace('. ', '-')

url을 넘겨줘서 login 페이지로 가라고 하면 됩니다

http://localhost:8080/day08/addBook?url=http://localhost:8080/day08/login



---------

스프링 인터셉터 : 요청을 가로채서 사전에 필요하거나, 응답 만들기 전 혹은 모든 처리가 끝난 이후 공통 코드를 처리

request, response 에 접근할 수 있다


---------


DispatcherServlet  ->	Intercepter  ->	Controller
			(true/false)
true => 그대로 진행 
false => 내가 별도의 응답을 만들어서 보낸다


---------

where 