46일차

session : 알바생 (객체)
cookie : 손님이 가지고 있는 쿠폰 (문자열)

a태그 : 페이지 전환에 목적이 있는 태그

form 태그 : 파라미터를 지정한 페이지로 보내기 위한 목적이 있는 태그
- 단순히 페이지 이동을 위해서라면 form태그를 사용하지 말기

==================================================

회원탈퇴 과정 

1. 링크를 클릭했으므로, 전달되는 파라미터가 없다

2. 나는 현재 로그인 한 계정의 탈퇴를 처리하고 싶다(session 의 login객체)

3. 각 계정을 중복없이 정확하게 구분할 수 있는 기준값은 PK

4. ${ login.userid } 를 가지고 와서 dao에 전달해서 삭제쿼리문을 실행하고 결과값을 가지고 온다

5. 삭제에 성공해도 로그인된 세션이 남아있으니까, 삭제를 성공하면 세션을 같이 날려준다

6. 만약 삭제 실패라면 탈퇴처리가 안되었다고 팝업을 알리고 back()

===================================================

나중에 가면 PreparedStatement를 더 많이 사용하게 된다

===================================================

탈퇴하면 로그아웃으로 넘겨서 session.invalidate()를 수행하도록 한다

<c:if test="${ dao.delete(param.pwChk) == 1 }">
	<%
	session.invalidate();
	%>
	<script>
		alert('회원탈퇴 완료~')
		location.href='${ cpath }'
	</script>
<!-- 	<c:redirect url="${ cpath}/logout.jsp"/> -->
</c:if>

-> 이런식으로 redirect를 걸어서 로그아웃으로 가도록 한다 탈퇴하면 그러면 세션이 자등으로 날아가니까

===================================================

<button id="delmenu">탈퇴</button>

<script>
	const delmenu = document.getElementById('delmenu')
	const userid = '${ login.userid }'
	const delHandler = function() {
	
	const flag = confirm(userid +'정말 탈퇴하시겠습니까\n탙퇴하면 정보삭제됩니다')
	if(flag){
	location.href='${ cpath}/dropProcess.jsp'
	}
	else{
	alert('잘 생각 하셨습니다')
	location.href='${ cpath}'
	}
}
	delmenu.onclick = delHandler
</script>

--> 이렇게 confirm 해서 할 수 있다

==================================================

11/17 평가일

파일 업로드


- 회원만 글을 작성할 수 있는 게시판 페이지를 만듭니다
- 비회원도 글을 읽을 수는 있지만, 작성, 수정, 삭제는 불가능합니다
- 회원 관련 메뉴 : 로그인, 회원 가입, 정보 확인, 수정, 탈퇴
(userid, userpw, username, email, gender)

- 게시판 관련 메뉴 : 작성, 목록, 읽기, 수정 삭제 검색
(idx, writer, title, content, writeDate, ipAddress)

idx		number		default board_seq.nextval primary key,
writer 		varchar2(500)	foregin key (member.userid) not null,
title		varchar2(500)	not null,
content		varchar2(2000)	not null,
writeDate	date		default sysDate,
ipAddress 	varchar2(50)	(클라이언트의 ip주소를 가지고 오면 된다 remote)request.getRemoteAddr();
	

현재 위치 기준 한단계 상위의 경로 : ..

select max(idx) +1 maxidx from board;
--> idx의 max값을 찾아서 작성하고 글을 보러갈 때 사용할 수 있다


====================================

select * from tabs;

select banner from v$version;

select * from member;

update member set username= '이지금이순간', email= 'aaa@naver.com', gender ='남성' where userid ='bbb';


create sequence board_seq
    start with 1
    maxvalue 99999999
    INCREMENT by 1
    nocache
    nocycle;

create table board (
    idx         number          default BOARD_SEQ.nextval primary key,
    writer      varchar2(500)   not null,
    title       varchar2(500)   not null,
    content     varchar2(2000)  not null,
    writeDate   date            default sysdate,
    ipAddress   varchar2(50)    not null
    );
insert into board(idx, writer, title, content, ipaddress) values (BOARD_SEQ.nextval,'bbb', '게시판 타이틀', '이지금이순간','0.0.0.0');
insert into board(idx, writer, title, content, ipaddress) values (BOARD_SEQ.nextval,'bbb', '이지금이순간', '마법처럼 날 ','0.0.0.0');
insert into board(idx, writer, title, content, ipaddress) values (BOARD_SEQ.nextval,'bbb', '홍진호홍진호', '저그저그','0.0.0.0');


insert into board(writer, title, content, ipaddress) values ('bbb', '임요환임요환', '황제테란황제테란','0.0.0.0');

select * from board order by idx;

select * from board order by idx;

select * from board where idx = 4;

select * from board where writer ='ccc';

select * from board where title like '%요%';

desc board;

select sysdate, SYSTIMESTAMP from dual;

==========================================