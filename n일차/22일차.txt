-> 리눅스에서 방화벽 설치가 안되어서 그런거였다
-> 맨 처음 확인하자 .... 생각도 못함...

[root@localhost ~]# firewall-cmd --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: ens33
  sources: 
  services: dhcpv6-client ssh
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
	
[root@localhost ~]# 
[root@localhost ~]# 
[root@localhost ~]# firewall-cmd --add-port=1521/tcp --permanent 
success
[root@localhost ~]# firewall-cmd --reload
success
[root@localhost ~]# 
[root@localhost ~]# firewall-cmd --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: ens33
  sources: 
  services: dhcpv6-client ssh
  ports: 1521/tcp
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
	
--> 여기서보면 prots : 가 없는 것을 볼 수 있다 설정을 안한거지!

--> route -n : gateway 확인하는 방법 대역이 같은지 확인할 때
0.0.0.0 => 모든 주소를 의미한다
gateway : 대문
네트워크 대역이 같은것 : gateway와 ip주소가 192.168.1.100 /192.168.1.2 
nat -> 동일한 컴퓨터의 가상머신을 연결

네트워크 주소 변환(영어: network address translation, 줄여서 NAT)은 컴퓨터 네트워킹에서 쓰이는 용어로서, 
IP 패킷의 TCP/UDP 포트 숫자와 소스 및 목적지의 IP 주소 등을 재기록하면서 라우터를 통해 네트워크 트래픽을 주고 받는 기술을 말한다. 
패킷에 변화가 생기기 때문에 IP나 TCP/UDP의 체크섬(checksum)도 다시 계산되어 재기록해야 한다. 
NAT를 이용하는 이유는 대개 사설 네트워크에 속한 여러 개의 호스트가 하나의 공인 IP 주소를 사용하여 인터넷에 접속하기 위함이다. 많은 네트워크 관리자들이 NAT를 편리한 기법이라고 보고 널리 사용하고 있다. 
NAT가 호스트 간의 통신에 있어서 복잡성을 증가시킬 수 있으므로 네트워크 성능에 영향을 줄 수 있는 것은 당연하다.

1. 네트워크 ip주소는 앞자리가 같은 네트워크 대역에 속한다고 한다
a,b,c 클래스
0-127 		a
128-191		b
192-233		c

2. vmware를 설치하면 윈도우 네트워크 어댑터 목록에 vmnetwork ***이 생성된다
- 제어판 -> 네트워크 및 인터넷 -> 네트워크 및 공유센터 ->
  어뎁터 설정변경(ncpa.cpl) -> nat이면 기본값 vmnet 8 (nat 기본값 8번이다)

3. 가상머신의 환경에서 windows가 가지는 ip는 192.168.1.1이다
윈도우    	: 192.168.1.1
리눅스 		: 192.168.1.100
gateway 	: 192.168.1.2

4. 각 단계에서 방화벽이나 보안프로그램에 의해서 차단되는 것은 아닌지 확인해야 한다
윈도우 	MacAfee,		(삭제 권장)
	Nortun Antivirus, 	(삭제 권장)
	카스피스키, 		(비활성화)
	알약, 			(비활성화)
	v3			(비활성화)
	wf.msc			(윈도우 방화벽) 
	인바운드 : 다른 컴에서 내 윈도우로 들어오는거 확인 / 아웃바운드 : 내 컴에서 나가는거 확인
	icmp : 핑보내는 것
	아웃바운드에서 새규칙에서 포트1521허용시켜준다

리눅스 	getsebool	(disabled 가 아니라면 설정 변경)
	firewall-cmd --list-all (1521이 허용되어 있어야 한다. 이게 안되어있으면 안된다)
	firewall-cmd --zone=public --add-port=1521/tcp
	firewall-cmd --reload 

5. 리눅스에서 서비스가 잘 구동되는지 확인하기
netstat -lntup | grep tns	(목록에 1521포트가 있는지 확인)

netstat -lntup | grep 22 	(22번 포트 확인 -> pttuy때문에)

lsnrctl status 로 확인 
// 오라클 리스너 목록에 SID가 2개정도만 뜨면 서비스를 재시작하기
// 서비스 재시작은 반드시 root 계정으로만 할 수 있음


-> 리눅스 그룹 생성 | 삭제 | 확인
https://webdir.tistory.com/134
==============================


varchar2 : 가변길이 문자열
char	 : 고정길이 문자열
number 	 : 정수 혹은 실수
date 	 : 날짜

drop table [tablename];

desc [tablename];

insert into [tablename] (column1..)
	values (values1,..);
-> 지정한 컬럼에 대해서만 값을 입력하는 경우
-> 지정하지 않은 컬럼에 대한 기본값 처리가 준비되어 있을 때

insert into [tablename] values (values1,values2,...);
-> 테이블에 명시된 모든 컬럼의 값을 순서대로 입력하는 경우

insert into phonebook (name, pnum) values ('이지은', '010-2311-1321');

insert into phonebook values ('홍진호','010-2332-1111',23);


select [column1][column2] from [tablename] where [조건] order by [정렬기준컬럼] (asc/desc);

select * from [tabelname];

select name, pnum from phonebook;

select * from phonebook where name = '이지은';

select * from phonebook order by name asc;

select * from phonebook order by name desc;

select * from tabs; -> table 확인하기


ORA-01756: 단일 인용부를 지정해 주십시오 => SQL문장을 살펴보니  ' 문자가 빠져 있었다


// order by decode , case
https://mjn5027.tistory.com/107

select * from phonebook2 
        order by
            favor desc, -- 먼저 즐겨찾기 여부로 정렬하고
            name asc;   -- 그 안에서 이름 기준으로 오름차순 정렬


select * from phonebook2 order by decode(name, '진호진호',1), name asc;
-- 영속성이 없다 // jdbc에서 사용하기는 좀 그럼


-- 이름이 'Ella','Lucy','Pickle', 'Rogan', 'Sabrina', 'Mitty' 인 것을 select 한다
SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE from ANIMAL_INS 
 where name in ('Ella','Lucy','Pickle', 'Rogan', 'Sabrina', 'Mitty');


-- 이름에 el 포함되는 것 lower로 이름 낮추고 like %el%로 포함되는 것 찾고 type 개 찾음
SELECT ANIMAL_ID, NAME from ANIMAL_INS where lower(name) like '%el%' and ANIMAL_TYPE = 'Dog' order by name;



공백이 여러개일경우찾기

SELECT * FROM TEST WHERE regexp_like(text, '[a-z]?[0-9]');

SELECT * FROM TEST WHERE regexp_like(text, '[a-z]*[0-9]');

[a-z]?[0-9]와 [a-z]*[0-9] 이 뜻은 공백이 여러개 포함한다는 뜻 입니다.


-- SEX_UPON_INTAKE의 값이 Neutered or Spayed 이면 O이고, 아니면 X라고 출력한다
SELECT ANIMAL_ID, NAME,

case when SEX_UPON_INTAKE like '%Neutered%' then 'O'
     when SEX_UPON_INTAKE like '%Spayed%' then 'O'
    else 'X'
end
as 중성화

from ANIMAL_INS 
order by ANIMAL_ID;

출처: https://lee-mandu.tistory.com/48 [개발/일상_Mr.lee]



제약조건

primary key	: unique + not null
not null	: 반드시 값을 입력해야 한다 	
foreign key	: 다른 테이블의 값을 참조한다
unique key	: 다른 줄과 겹치지 않는 고유값
default 	: 입력이 없으면 기본값을 설정한다	 default 0
check 		: 값의 입력범위를 제한한다 	 check(favor in ('y', 'n')

update phonebook2 set favor = 'n' where name ='진호진호'; 
update [테이블] set [변경사항] where [컬럼] = [조건];


=========================================================================

Oracle DB 제약조건 (데이터 삽입 시 제약조건)
- DB에 다수의 데이터를 저장하여 관리
- 쉬운 관리를 위해서, 각 데이터를 구분할 수 있는 기준점(pk)
- 중복이 되면 안된다는 규칙(uk)
- 특정 값만 넣을 수 있다는 규칙(check, fk)
- 값을 지정하지 않으면 기본값을 지정하는 규칙(default)
- 반드시 값을 입력해야 한다는 규칙(not null)

1. primary key : 여러 줄의 데이터를 데이터를 구분하기 위한 기준값(고유 번호)
- unique key + not null의 규칙을 동시에 가진다
- 다른 줄의 데이터와 중복될 수 없으며, 반드시 값을 입력해야 한다
- 다수의 데이터 속에서 정확하게 하나의 데이터만 구별하여 추출할 수 있다

select * from student where student_idx = 5;

- 오라클 sequence : 지정한 범위 내에서 순서대로 정수를 추출해주는 장치

create sequence student_seq
	start with [시작값]
	maxvalue [끝값]
	increment by [증감값]
	nocycle 	-- 마지막값에 도달하면 처음으로 돌아오지 못하도록 설정
	nocache; -- 캐시에 의해서 다음 번호가 현재번호보다 더 큰 간격으로 설정될 수 있다
		 -- currval과 nextval의 간격이 커지는 상황을 없애기 위해서 nocache추가
select student_seq.currval from dual;	-- 현재값
select student_seq.nextval from dual;	-- 다음값


2. default : 값을 별도로 지정하지 않으면, 기본값을 자동으로 입력하는 조건

Ex) 상품의 기본 수량을 지정하지 않으면 0으로 처리하는 sql

create table product (
	product_name 		varchar2(100) 	not null,
	product_quantity	number		default 0
	regist_date 		date		default to_char(sysdate, 'yyyy-mm-dd')
);
insert into product (product_name) values('포카리스웨트');

 
create table product (
	product_name 		varchar2(100) 	not null,
	product_quantity	number		default 0,
	regist_date 		VARCHAR2(30)	default to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss')
);
--> sysdate를 to_char로 바꾸었기 때문에 자료형을 varchar2로 변경해줘야 한다

char 차 x 캐릭터 o

Ex) PK의 Sequenc의 default를 조합하여 학생 번호를 자동으로 작성하도록 

create table student (
	idx 	number		default student_seq.nextval primary key,
	name	varchar(30)	not null,
	score	number		default 0
);	


3. Unique key : 고유키, 다른 row의 데이터의 중복된 값을 가질 수 없는 규칙
create table student (
    idx     number      default STUDENT_SEQ.nextval primary key,
    name    varchar2(30) not null unique,	-- name에 고유키를 걸어서 중복된 이름을 제거한다
    score   number      default 0
    );

4. not null : 공백불가, 반드시 값을 입력해야한다

5. check : 지정한 컬럼에 입력할 수 있는 값의 형태를 제한한다

create table student (
	idx 	number		default student_seq.nextval primary key,
	name	varchar(30)	not null,
	score	number		default 0 check( score between 1 and 100),
	gender  varchar2(10)	check(gender in ('남성','여성'),
	age	number		check(age > 0)
);	


6. fk : inner join / outer join 
=======================================
sequence의 정수 범위? int long ? 




시퀀스(Sequence)란?
시퀀스란 자동으로 순차적으로 증가하는 순번을 반환하는 데이터베이스 객체입니다. 
보통 PK값에 중복값을 방지하기위해 사용합니다. 
예를들어 게시판에 글이 하나 추가될때마다 글번호(PK)가 생겨야 한다고 해보겠습니다. 
만약 100번까지 글 번호가 생성되어있다면 그 다음 글이 추가가 되었을 경우 글 번호가 101으로 하나의 ROW를 생성해주어야 할것입니다. 
이때 101이라는 숫자를 얻으려면 기존 글번호중 가장 큰 값에 +1을 하는 로직을 어딘가에 넣어야하는데 
시퀀스를 사용하면 이러한 로직이 필요없이 데이터베이스에 ROW가 추가될때마다 자동으로 +1을 시켜주어 매우 편리합니다.


INCREMENT BY : Sequence의 번호 생성 간격을 말합니다. 생략 시 1씩 증가합니다.

START WITH : 생성할 첫번째 번호입니다. 생략시 1부터 시작합니다.

MAXVALUE : 번호의 최대값을 지정합니다. 생략시 NOMAXVALUE를 기본값으로 ( 10^27  )이 최대 입니다.

MINVALUE : 최소값을 지정합니다. 생략시 NOMINVALUE를 기본값으로 1이 최소입니다.

CYCLE : 최대값이나 최소값을 도달했을때 반복할지 여부를 지정합니다. 생략시 NOCYCLE이 기본값입니다.

CACHE : 공유메모리에 미리 생성할 번호의 개수를 지정합니다. 기본값은 20개입니다.



sequence의 문제점

1. Transaction rollback 되었을 때
 Sequence는 한번 생성되면 이전 번호로 돌아갈 수 있는 방법이 없습니다. 
 만약 1번 부터 시작하는 Sequence를 이용해서 Insert 작업을 10번 했는데 Rollback을 하게 되었을 경우 
 Sequence의 번호는 Rollback 되지 않고 그대로 다음 번호를 받아와 갭이 생깁니다.
출처 _ https://myjamong.tistory.com/178

2. 여러 테이블에서 Sequence 사용할 때
 하나의 Sequence로 여러 테이블에서 사용한다면 번호 사이의 갭이 생깁니다. 
 하지만 이부분은 각각 테이블별로 따로 Sequence를 만들어서 사용해주면 해결할 수 있는 문제 입니다.

3. 오라클 서버가 다운되었을 때
 오라클 서버 공유메모리에 CACHE SIZE 만큼의 Sequence 번호를 미리 생성한다고 했습니다. 
 휘발성 데이터인 메모리는 서버가 다운된다면 사라집니다. 
 한번 생성된 Sequence 번호는 다시 Rollback 되지 않기 때문에 오라클 서버가 다운된다면 
 공유메모리에 올라간 번호들은 날아가고 다음 Sequence의 순서부터 번호가 시작합니다.
-> 게시판 no.가 중간값이 날라간 이유

--> 2번의 문제는 해결이 가능하지만, 1번 3번의 문제는 방법이 없습니다. 
그래서 Sequence의 경우, 순차적일 필요없이 그냥 고유의 아이디가 필요한 경우 사용하는 것을 권장합니다.