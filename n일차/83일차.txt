83일차

@RestController					
// 모든 method는 @ResponseBody를 포함한다
// @ResponseBody : 이 함수가 반환하는 값 그 자체가 응답이다 
public class AjaxController {

	@Autowired private TodoService ts;
	
	@GetMapping("/todo")
	public List<TodoDTO> list(){
		return ts.selectList();
	}
	
	@PostMapping("/getTodoData")
	public int getTodoData(@RequestBody HashMap<String, String> map ) {
		// @RequestBody TodoDTO dto로 만든 dto를 사용할 수 있다
		// @RequestBody : 요청에 담긴 [body : JSON.stringify(ob)] 를 DTO에 맵핑해라
		int row = ts.insertData(map);
		return row;
	}
	
	@DeleteMapping("/todo/{idx}")
	public int deleteTodo(@PathVariable int idx) {
		int row = ts.getDelete(idx);
		return row;
	}
} 


modal창에 ajax를 넣어서 구현한다

메일 주소를 입력하고 버튼을 클릭하면 입력할 이메일로 인증코드를 발송하고
보낸 인증코드와 입력한 인증코드가 일치하면 다음 창으로 넘어가는 코드 (AJAX)
(+@ 인증코드 값이 노출되지 않도록 Hash 처리하기)
Hash 처리
- 데이터를 보안하는 방법에는 크게 2가지로 나눈다
- 1. Hash : 단방향 변환, 원본 복구 불가능, 일치 여부 판단 가능 / 
--> 데이터를 잘게 조각낸다 / 소인수분해 / 문자를 숫자로 변환해서 인수분해 해버리는 것 / 원본 복구는 안되지만 일치여부는 확인할 수 있다
- 2. Encryption : 양방향 변환, 키가 있으면 원본 데이터로 돌려놓는 것이 가능(SSL, SSH, HTTPS)


=========

-> 이메일로 보내기 위한 라이브러리 

spring-context-support

javax.mail

jackson-Databind


HomeController없이 작동하는 방법
<view-controller path="/" view-name="home"/>
- 컨트롤러의 특정 수행 내용 없이 단순히 view를 띄우기 위해서라면
- dispatcherServlet이 곧바로 viewName을 지정해서 jsp로 포워딩하게 설정한다
- 과정이 복잡하니까 컨트롤러에서 할게 없으면 바로 가게 할 수 있다
- but, 메서드 구분이 안된다
- 모든 방식의 메서드에 대해서 작동한다
- 메서드를 구분하는 경우에는 사용하면 안된다


===========

온라인 해시 함수
MD5
SHA 1
SHA 256
SHA 384
SHA 512 -> 대소문자 일치 여부를 판별하기 쉽다 / 정해져있는 알고리즘이라서 입력값이랑 출력이랑 매치


네이버  내 메일함 환경설정에 가서 사용하믕로 변경